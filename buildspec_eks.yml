version: 0.2
run-as: root

phases:
  install:
    commands:
      - echo Installing app dependencies...
      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.18.9/2020-11-02/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
      - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      - source ~/.bashrc
      - echo 'Check kubectl version'
      - kubectl version --short --client
      - chmod +x eks_cicd/prereqs.sh
      - sh eks_cicd/prereqs.sh

  pre_build:
    commands:
      - echo Logging in to Amazon EKS...
      - aws eks --region us-east-1 update-kubeconfig --name demo
      - echo Checking config
      - kubectl config view --minify
      - echo Checking kubectl access
      - kubectl get svc
      - echo Logging in to Amazon ECR...
      - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/z8x3f1i4

  build:
    commands:
      - echo Build started on `date`
      # Borra la imagen personalizada de httpd del repositorio ECR
      - aws ecr-public batch-delete-image --region us-east-1 --repository-name test-iavt12 --image-ids imageTag=my-custom-httpd-image

      - echo Building the Docker image...
      - docker build --no-cache -t test-iavt12:my-custom-httpd-image .
      - docker tag test-iavt12:my-custom-httpd-image public.ecr.aws/z8x3f1i4/test-iavt12:my-custom-httpd-image

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push public.ecr.aws/z8x3f1i4/test-iavt12:my-custom-httpd-image
      - echo Deploying the latest image to the cluster
      - kubectl set image deployment/cicd-demo-deployment custom-httpd-container=public.ecr.aws/z8x3f1i4/test-iavt12:my-custom-httpd-image --record
      - kubectl rollout status deployment/cicd-demo-deployment
      - kubectl get pods
